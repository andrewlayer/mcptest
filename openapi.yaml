openapi: 3.0.0

info:
  version: 1.0.0
  title: Castellum.AI
  description: Castellum.AI API for screening integration.

security:
  - bearerAuth: []

paths:
  /entity_types:
    get:
      tags:
        - informational
      summary: Get list of entity types
      parameters:
        - $ref: "#/components/parameters/version_id"
      responses:
        "200":
          description: A list of entity types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityType"
              example:
                - id: 1
                  name: Individual
                - id: 2
                  name: Entity
                - id: 3
                  name: Aircraft

  /countries:
    get:
      tags:
        - informational
      summary: Get list of countries
      parameters:
        - $ref: "#/components/parameters/version_id"
      responses:
        "200":
          description: A list of countries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Country"
              example:
                - id: 1
                  iso_3166_1_numeric: "158"
                  official_name: Taiwan
                  iso_3166_1_alpha_2: TW
                - id: 238
                  iso_3166_1_numeric: "840"
                  official_name: United States of America
                  iso_3166_1_alpha_2: US

  /list_sources:
    get:
      tags:
        - informational
      summary: Get list of list sources
      parameters:
        - $ref: "#/components/parameters/version_id"
      responses:
        "200":
          description: A list of list sources and category information.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListSource"
              example:
                - id: 100
                  name: US OFAC SDN
                  category:
                    id: 1
                    name: Sanctions
                  lists:
                    - id: 50
                      name: DPRK
                    - id: 51
                      name: Iran
                - id: 200
                  name: UK Sanctions
                  category:
                    id: 1
                    name: Sanctions
                  lists:
                    - id: 60
                      name: IRQ

  /screen_entity:
    post:
      tags:
        - screening
      summary: Performs a single query against the database
      description: At least one category or list source must be supplied.<br>Passing in the as_of parameter will run a delta screen where the returned hits have been updated since the datetime specified (last_updated is greater than or equal to as_of).
      parameters:
        - $ref: "#/components/parameters/request_id"
        - $ref: "#/components/parameters/version_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScreenEntityRequest"
            example:
              query:
                min_score: "0.8"
                name: Peter Griffin
                countries: ["US", "GB"]
                list_source_categories: ["Sanctions"]
                dob: "1935-01-01T00:00:00.00Z"
                dob_months_range: 12
                as_of: "2024-01-01T12:00:00.00Z"
              flatten_catchall: false

      responses:
        "200":
          description: A query response containing an array of "hits" for list entries matching search criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScreenEntityResponse"
              examples:
                query success:
                  $ref: "#/components/examples/ScreenEntityResponse"

  /screen_entities:
    post:
      tags:
        - screening
      summary: Performs a batch query against the database
      parameters:
        - $ref: "#/components/parameters/request_id"
        - $ref: "#/components/parameters/version_id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScreenEntitiesRequest"
            example:
              screen_entity_queries:
                - min_score: "0.8"
                  name: Peter Griffin
                - min_score: "0.8"
                  name: Ted Cruz
                  list_sources:
                    - name: "OFAC SDN"
                      category:
                        name: "Sanctions"
                      lists:
                        - name: "NPWMD"
              flatten_catchall: true
      responses:
        "200":
          description: An array of query responses, each with a list of "hits" matching search criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScreenEntitiesResponse"
              examples:
                query_success:
                  $ref: "#/components/examples/ScreenEntitiesResponse"

  /list_entries/{list_source_name}:
    get:
      tags:
        - list management
      parameters:
        - name: list_source_name
          in: path
          description: Name of watchlist to retrieve
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListEntry"
        "401":
          description: not authorized to view watchlist
    delete:
      tags:
        - list management
      parameters:
        - name: list_source_name
          in: path
          description: Name of watchlist to delete
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
        "401":
          description: not authorized to delete watchlist

  /list_entries:
    post:
      tags:
        - list management

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListEntries"
            example:
              list_entries:
                - provider_id: "NL001"
                  type:
                    name: "individual"
                  name:
                    full_name: "Albert Einstein"
                  list_source:
                    name: "Nobel Laureates"
                    category:
                      name: "Custom"
                    lists:
                      - name: "scientists"
                      - name: "physics"
                - provider_id: "NL002"
                  type:
                    name: "individual"
                  name:
                    full_name: "Ernest Rutherford"
                  list_source:
                    name: "Nobel Laureates"
                    category:
                      name: "Custom"
                    lists:
                      - name: "scientists"
                      - name: "chemistry"

      responses:
        "200":
          description: data has been recieved, validated, and watchlist updated
        "400":
          description: bad request, missing required fields or data cannot be parsed into watchlist
        "401":
          description: not authorized to update watchlist
        "503":
          description: server is busy, post can't be performed at this time (retry can usually be attempted in a few seconds)

  /monitoring/monitors:
    get:
      tags:
        - monitoring
      summary: Get all monitors owned by the organization, ordered by creation date
      operationId: GetMonitors
      parameters:
        - name: page_size
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 100
        - name: page_number
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMonitorsResponse'
              examples:
                sampleMonitors:
                  summary: Sample list of monitors
                  value:
                    monitors:
                      - name: "High Risk Entities"
                        slug: "high-risk-entities"
                        parameters:
                          min_score: 0.75
                          list_source_categories: ["Sanctions"]
                          exclude_weak_akas: true
                          dob_months_range: 6
                        notifier_id: 2
                      - name: "PEP Screening"
                        slug: "pep-screening"
                        parameters:
                          min_score: 0.8
                          list_sources: ["PEPs"]
                          exclude_weak_akas: false
                          dob_months_range: 12
                        notifier_id: 3

  /monitoring/monitor:
    post:
      tags:
        - monitoring
      summary: Create a new monitor
      operationId: PostMonitor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMonitorRequest'
            examples:
              newMonitor:
                summary: Create a new monitor
                value:
                  monitor:
                    name: "Sanctions Screening"
                    parameters:
                      min_score: 0.8
                      list_source_categories: ["Sanctions"]
                      exclude_weak_akas: true
                      dob_months_range: 3
                    notifier_id: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMonitorResponse'
              examples:
                createdMonitor:
                  summary: Created monitor response
                  value:
                    slug: "sanctions-screening"

  /monitoring/monitor/{slug}:
    get:
      tags:
        - monitoring
      summary: Get a specific monitor
      operationId: GetMonitor
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMonitorResponse'
              examples:
                sampleMonitor:
                  summary: Sample monitor response
                  value:
                    monitor:
                      name: "High Risk Entities"
                      slug: "high-risk-entities"
                      parameters:
                        min_score: 0.75
                        list_source_categories: ["Sanctions"]
                        exclude_weak_akas: true
                        dob_months_range: 6
                      notifier_id: 2
    put:
      tags:
        - monitoring
      summary: Update an existing monitor
      operationId: UpdateMonitor
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          example: "high-risk-entities"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMonitorRequest'
            examples:
              fullUpdate:
                summary: Full update of a monitor
                value:
                  monitor:
                    name: "Updated High Risk Entities"
                    parameters:
                      min_score: 0.8
                      list_source_categories: ["Sanctions"]
                      exclude_weak_akas: true
                      dob_months_range: 12
                    notifier_slug: "my-notifier"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMonitorResponse'
              example:
                monitor:
                  name: "Updated High Risk Entities"
                  slug: "high-risk-entities"
                  parameters:
                    min_score: 0.8
                    list_source_categories: ["Sanctions"]
                    exclude_weak_akas: true
                    dob_months_range: 12
                  notifier_slug: "my-notifier"
    delete:
      tags:
        - monitoring
      summary: Delete an existing monitor
      operationId: DeleteMonitor
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response

  /monitoring/monitor/{monitor_slug}/screen_entity/{provider_id}:
    get:
      tags:
        - monitoring
      summary: Get information about a specific entity
      operationId: GetScreenEntity
      parameters:
        - name: monitor_slug
          in: path
          required: true
          schema:
            type: string
          example: "high-risk-entities"
        - name: provider_id
          in: path
          required: true
          schema:
            type: string
          example: "ENT001"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScreenEntityResponse'
              example:
                screen_entity:
                  name: "John Doe"
                  monitor_slug: "high-risk-entities"
                  id_number: "1234567890"
                  location: "New York, USA"
                  dob: "1980-01-15"
                  provider_id: "ENT001"
                  reference_id: "CLIENT001"
    put:
      tags:
        - monitoring
      summary: Update an existing entity
      operationId: UpdateScreenEntity
      parameters:
        - name: monitor_slug
          in: path
          required: true
          schema:
            type: string
          example: "high-risk-entities"
        - name: provider_id
          in: path
          required: true
          schema:
            type: string
          example: "ENT001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScreenEntityRequest'
            example:
              screen_entity:
                name: "John Smith"
                id_number: "0987654321"
                location: "Los Angeles, USA"
                dob: "1980-01-15"
                reference_id: "CLIENT001-UPDATED"
              update_mask:
                paths: ["name", "id_number", "location", "reference_id"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateScreenEntityResponse'
              example:
                screen_entity:
                  name: "John Smith"
                  monitor_slug: "high-risk-entities"
                  id_number: "0987654321"
                  location: "Los Angeles, USA"
                  dob: "1980-01-15"
                  provider_id: "ENT001"
                  reference_id: "CLIENT001-UPDATED"
    patch:
      tags:
        - monitoring
      summary: Partially update an existing screen entity
      operationId: PatchScreenEntity
      parameters:
        - name: monitor_slug
          in: path
          required: true
          schema:
            type: string
          example: "high-risk-entities"
        - name: provider_id
          in: path
          required: true
          schema:
            type: string
          example: "ENT001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScreenEntityRequest'
            example:
              screen_entity:
                location: "Chicago, USA"
              update_mask:
                paths: ["location"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateScreenEntityResponse'
              example:
                screen_entity:
                  name: "John Doe"
                  monitor_slug: "high-risk-entities"
                  id_number: "1234567890"
                  location: "Chicago, USA"
                  dob: "1980-01-15"
                  provider_id: "ENT001"
                  reference_id: "CLIENT001"

  /monitoring/monitor/{monitor_slug}/screen_entities:
    get:
      tags:
        - monitoring
      summary: Get all screen entities that belong to a monitor
      operationId: GetScreenEntities
      parameters:
        - name: monitor_slug
          in: path
          required: true
          schema:
            type: string
          example: "high-risk-entities"
        - name: page_size
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 100
          example: 10
        - name: page_number
          in: query
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScreenEntitiesResponse'
              example:
                screen_entities:
                  - name: "John Doe"
                    monitor_slug: "high-risk-entities"
                    id_number: "1234567890"
                    location: "New York, USA"
                    dob: "1980-01-15"
                    provider_id: "ENT001"
                    reference_id: "CLIENT001"
                  - name: "Jane Smith"
                    monitor_slug: "high-risk-entities"
                    id_number: "0987654321"
                    location: "Los Angeles, USA"
                    dob: "1985-06-30"
                    provider_id: "ENT002"
                    reference_id: "CLIENT002"
    post:
      tags:
        - monitoring
      summary: Add entities to a monitor
      operationId: PostScreenEntities
      parameters:
        - name: monitor_slug
          in: path
          required: true
          schema:
            type: string
          example: "high-risk-entities"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostScreenEntitiesRequest'
            example:
              screen_entities:
                - name: "Alice Johnson"
                  id_number: "2468101214"
                  location: "Chicago, USA"
                  dob: "1990-03-15"
                  reference_id: "CLIENT003"
                - name: "Bob Wilson"
                  id_number: "1357902468"
                  location: "Houston, USA"
                  dob: "1988-09-22"
                  reference_id: "CLIENT004"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostScreenEntitiesResponse'
              example:
                monitor_slug: "high-risk-entities"
                provider_ids: ["ENT003", "ENT004"]
    put:
      tags:
        - monitoring
      summary: Update entities on a monitor
      operationId: UpdateScreenEntities
      parameters:
        - name: monitor_slug
          in: path
          required: true
          schema:
            type: string
          example: "high-risk-entities"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScreenEntitiesRequest'
            example:
              screen_entities:
                - provider_id: "ENT001"
                  name: "John Doe Jr."
                  location: "Miami, USA"
                - provider_id: "ENT002"
                  id_number: "9876543210"
                  dob: "1985-07-01"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateScreenEntitiesResponse'
              example:
                updated_count: 2
  /monitoring/monitor/{monitor_slug}/screen_entities/{provider_ids}:
    delete:
      tags:
        - monitoring
      summary: Remove entities from a monitor
      operationId: DeleteScreenEntities
      parameters:
        - name: monitor_slug
          in: path
          required: true
          schema:
            type: string
          example: "high-risk-entities"
        - name: provider_ids
          in: path
          required: true
          schema:
            type: string
          example: ["ENT003","ENT004"]
      responses:
        '200':
          description: Successful response

  /monitoring/{monitor_slug}/notifications:
    get:
      tags:
        - monitoring
      summary: Query notifications from a monitor within a specific time range
      operationId: GetMonitorNotifications
      parameters:
        - name: monitor_slug
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: query
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          schema:
            type: string
            format: date-time
        - name: page_size
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 100
        - name: page_number
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMonitorNotificationsResponse'
              examples:
                sampleNotifications:
                  summary: Sample notifications
                  value:
                    notifications:
                      - created_at: "2024-09-10T15:45:00Z"
                        hits:
                          - id: 1
                            provider_id: "JD001"
                            hit:
                              name: "John Doe"
                              score: 0.85
                              list_name: "OFAC SDN"
                          - id: 2
                            provider_id: "JS001"
                            hit:
                              name: "Jane Smith"
                              score: 0.75
                              list_name: "EU Consolidated List"
                        notifier_slug: "webhook-notifier"
                        monitor_slug: "high-risk-entities"
                        processed_at: "2024-09-10T15:46:00Z"

  /monitoring/{monitor_slug}/notifiers:
    get:
      tags:
        - monitoring
      summary: Query notifiers from a monitor
      operationId: GetMonitorNotifiers
      parameters:
        - name: monitor_slug
          in: path
          required: true
          schema:
            type: string
          example: "high-risk-entities"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMonitorNotifiersResponse'
              example:
                notifiers:
                  - id: 1
                    url: "https://api.example.com/webhook1"
                    name: "High Risk Webhook"
                    slug: "high-risk-webhook"
                    settings:
                      secret_key: "secret-key-1"
                      content_type: "application/json"
                    created_at: "2023-08-01T10:00:00Z"
                  - id: 2
                    url: "https://api.example.com/webhook1"
                    name: "medium Risk Webhook"
                    slug: "medium-risk-webhook"
                    settings:
                      secret_key: "secret-key-1"
                      content_type: "application/json"
                    created_at: "2023-08-01T10:00:00Z"
                  - id: 3
                    url: "https://api.example.com/webhook1"
                    name: "Low Risk Webhook"
                    slug: "low-risk-webhook"
                    settings:
                      secret_key: "secret-key-1"
                      content_type: "application/json"
                    created_at: "2023-08-01T10:00:00Z"

  /monitoring/notifiers:
    get:
      tags:
        - monitoring
      summary: Retrieve all notifiers for an organization, ordered by creation date
      operationId: GetNotifiers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotifiersResponse'
              examples:
                sampleNotifiers:
                  summary: Sample list of notifiers
                  value:
                    notifiers:
                      - id: 1
                        url: "https://api.example.com/webhook"
                        name: "Example Webhook"
                        slug: "example-webhook"
                        settings:
                          secret_key: "your-secret-key"
                          content_type: "application/json"
                        created_at: "2023-08-01T10:00:00Z"
                      - id: 2
                        url: "https://slack.com/api/chat.postMessage"
                        name: "Another webhook"
                        slug: "another-webhook"
                        settings:
                          secret_key: "another-secret-key"
                          content_type: "application/json"
                        created_at: "2023-08-15T14:30:00Z"

  /monitoring/notifier:
    post:
      tags:
        - monitoring
      summary: Add a new notifier
      operationId: PostNotifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostNotifierRequest'
            examples:
              newNotifier:
                summary: Create a new notifier
                value:
                  notifier:
                    url: "https://api.example.com/new-webhook"
                    name: "New Webhook Notifier"
                    settings:
                      secret_key: "new-secret-key"
                      content_type: "application/json"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostNotifierResponse'
              examples:
                createdNotifier:
                  summary: Created notifier response
                  value:
                    slug: "new-webhook-notifier"

  /monitoring/notifier/{notifier.slug}:
    put:
      tags:
        - monitoring
      summary: Update an existing notifier
      operationId: UpdateNotifier
      parameters:
        - name: notifier.slug
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotifierRequest'
            examples:
              updateNotifier:
                summary: Update an existing notifier
                value:
                  notifier:
                    url: "https://api.example.com/updated-webhook"
                    name: "Updated Webhook Notifier"
                    settings:
                      secret_key: "updated-secret-key"
                      content_type: "application/json"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNotifierResponse'
              examples:
                updatedNotifier:
                  summary: Updated notifier response
                  value:
                    slug: "updated-webhook-notifier"
                    notifier:
                      id: 3
                      url: "https://api.example.com/updated-webhook"
                      name: "Updated Webhook Notifier"
                      slug: "updated-webhook-notifier"
                      settings:
                        secret_key: "updated-secret-key"
                        content_type: "application/json"
                      created_at: "2023-09-01T09:00:00Z"

  /monitoring/notifier/{slug}:
    delete:
      tags:
        - monitoring
      summary: Delete an existing notifier
      operationId: DeleteNotifier
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          example: "example-webhook"
      responses:
        '200':
          description: Successful response

  /monitoring/{monitor_slug}/receipts:
    get:
      tags:
        - monitoring
      summary: Get notification receipts within a specific time range
      operationId: GetNotificationReceipts
      parameters:
        - name: monitor_slug
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: query
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          schema:
            type: string
            format: date-time
        - name: page_size
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 100
        - name: page_number
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotificationReceiptsResponse'
              examples:
                sampleReceipts:
                  summary: Sample notification receipts
                  value:
                    receipts:
                      - id: 1
                        url: "https://api.example.com/webhook"
                        settings:
                          secret_key: "webhook-secret-key"
                          content_type: "application/json"
                        response_code: 200
                        response_body:
                          status: "success"
                          message: "Notification received"
                        last_updated: "2023-09-05T10:15:30Z"
                      - id: 2
                        url: "https://slack.com/api/chat.postMessage"
                        settings:
                          secret_key: "slack-bot-token"
                          content_type: "application/json"
                        response_code: 200
                        response_body:
                          ok: true
                          channel: "C1234567890"
                          ts: "1631275801.000400"
                          message:
                            type: "message"
                            subtype: "bot_message"
                            text: "New high-risk entity detected"
                        last_updated: "2023-09-07T14:30:01Z"
                      - id: 3
                        url: "https://api.example.com/webhook"
                        settings:
                          secret_key: "webhook-secret-key"
                          content_type: "application/json"
                        response_code: 500
                        response_body:
                          status: "error"
                          message: "Internal server error"
                        last_updated: "2023-09-09T09:45:15Z"

components:
  parameters:
    request_id:
      name: X-Request-ID
      in: header
      description: unique id for request tracking purposes
      required: false
      schema:
        type: string
        format: uuid
    version_id:
      name: X-Version-ID
      in: header
      description: target api version for request, dafaults to latest
      required: false
      schema:
        type: string

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    Country:
      type: object
      description: Country object that includes it's name and ISO codes
      properties:
        id:
          type: number
          description: Internal identifier for country
          readOnly: true
        iso_3166_1_numeric:
          type: string
          description: ISO 3166-1 numeric code.
          readOnly: true
        iso_3166_1_alpha_2:
          type: string
          description: ISO 3166-1 alpha-2 code.
        name:
          type: string
          description: Unofficial name country is more commonly known by
          readOnly: true
        official_name:
          type: string
          description: Official country name according to ISO 3166-1
          readOnly: true
        synthetic:
          type: boolean
          description: Flag to identify country is not in ISO 3166-1 standard
          readOnly: true

    List:
      description: A list within a given list source
      type: object
      required: [name]
      properties:
        id:
          type: number
          readOnly: true
        name:
          type: string

    ListSource:
      description: Data source for watchlist entries
      type: object
      required: [name]
      properties:
        id:
          type: number
          readOnly: true
        name:
          type: string
        category:
          $ref: "#/components/schemas/ListSourceCategory"
        lists:
          type: array
          items:
            $ref: "#/components/schemas/List"
        last_updated:
          type: string
          readOnly: true
        authority:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true

    ListSourceCategory:
      description: Category for a list source.
      type: object
      required: [name]
      properties:
        id:
          type: number
          readOnly: true
        name:
          type: string

    EntityType:
      type: object
      description: entity type
      required: [name]
      properties:
        id:
          type: number
          readOnly: true
        name:
          type: string

    ScreenEntityRequest:
      type: object
      properties:
        query:
          $ref: "#/components/schemas/ScreenEntityQuery"
        flatten_catchall:
          type: boolean
          default: false

    ScreenEntitiesRequest:
      type: object
      properties:
        screen_entity_queries:
          type: array
          items:
            $ref: "#/components/schemas/ScreenEntityQuery"
        flatten_catchall:
          type: boolean
          default: false

    ScreenEntityQuery:
      type: object
      description: At least one list_source or list_source_category must be supplied.
      required:
        - min_score
      properties:
        min_score:
          type: number
          format: float
        page_size:
          type: integer
          minimum: 0
          maximum: 200
          default: 10
        name:
          type: string
        address:
          type: string
        id_number:
          type: string
        entity_types:
          type: array
          items:
            $ref: "#/components/schemas/EntityType"
        countries:
          type: array
          items:
            type: string
        citizenships:
          type: array
          items:
            type: string
        list_sources:
          type: array
          items:
            $ref: "#/components/schemas/ListSource"
        list_source_categories:
          type: array
          items:
            type: string
        exclude_weak_akas:
          type: boolean
        reference_id:
          type: string
        dob:
          type: string
          format: date-time
        dob_months_range:
          type: integer
        as_of:
          type: string
          format: date-time
          description: Include this parameter only when running delta screens. When specified, returns hits where last_updated on the list_entry is greater than or equal to the as_of value provided.

    ListEntry:
      type: object
      required: [type, name, list_source]
      properties:
        type:
          $ref: "#/components/schemas/EntityType"
        provider_id:
          type: string
        castellum_id:
          type: string
        list_source:
          $ref: "#/components/schemas/ListSource"
        citizenships:
          type: array
          items:
            $ref: "#/components/schemas/Country"
        dobs:
          type: array
          items:
            $ref: "#/components/schemas/DateRange"
        name:
          $ref: "#/components/schemas/Name"
        aliases:
          type: array
          items:
            $ref: "#/components/schemas/Name"
        pobs:
          type: array
          items:
            $ref: "#/components/schemas/Location"
        addresses:
          type: array
          items:
            $ref: "#/components/schemas/Location"
        catch_all:
          type: object
        relationships:
          type: array
          items:
            $ref: "#/components/schemas/Relationship"
        url:
          type: string
        title:
          type: string
        snippet:
          type: string
        article:
          type: string
        last_updated:
          type: string
          format: date-time

    ListEntries:
      type: object
      properties:
        screen_entity_queries:
          type: array
          items:
            $ref: "#/components/schemas/ListEntry"

    Relationship:
      description: A relationship between an entity and other entities in the database.
      type: object
      properties:
        provider_id:
          type: string
        relation:
          type: string
        name:
          type: string
        degree:
          type: number
        shares:
          type: array
          items:
            $ref: "#/components/schemas/Share"
          description: Broken down shares information for this relationship. Only available on High-Risk Ownership entities.

    Share:
      type: object
      properties:
        degree:
          type: number
        date:
          type: string
        from_date:
          type: string
        to_date:
          type: string
        num_shares:
          type: number
          format: float
        monetary_value:
          type: number
          format: float
        currency:
          type: string
        percentage:
          type: number
          format: float
        type:
          type: string
        relation:
          type: string

    Location:
      description: Information about a location
      type: object
      properties:
        country:
          $ref: "#/components/schemas/Country"
        address:
          type: string
        city:
          type: string
        postal:
          type: string
        region:
          type: string
        state:
          type: string

    Name:
      description: A name, name parts, and ID documents associated with a name. Names are decomposed into name parts when the information is made available by the data provider.
      type: object
      required: [name]
      properties:
        generated:
          type: boolean
          description: The 'generated' field indicates names generated by Castellum.AI.
        low_quality:
          type: boolean
        full_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        middle_name:
          type: string
        maiden_name:
          type: string
        nickname:
          type: string
        ids:
          type: array
          items:
            $ref: "#/components/schemas/ID"

    ID:
      description: A form of identification. This can range from passports and national ID numbers for individuals to IMO numbers for vessels.
      type: object
      properties:
        type:
          type: string
        number:
          type: string
        country:
          $ref: "#/components/schemas/Country"
        issue_date:
          $ref: "#/components/schemas/DateRange"
        expiration_date:
          $ref: "#/components/schemas/DateRange"

    DateRange:
      description: >
        All dates are represented as date ranges to handle values of varying specificity. 
        If start and end have the same value the object represents a specific date otherwise
        it represents a date range.
      type: object
      properties:
        start:
          type: string
        end:
          type: string
        raw:
          type: string

    Hit:
      type: object
      properties:
        score:
          type: number
        list_entry:
          $ref: "#/components/schemas/ListEntry"

    ScreenEntitiesResponse:
      type: array
      items:
        $ref: "#/components/schemas/ScreenEntityResponse"

    ScreenEntityResponse:
      type: object
      properties:
        total_hits:
          type: number
          format: int64
        hits:
          type: array
          items:
            $ref: "#/components/schemas/Hit"
        query:
          $ref: "#/components/schemas/ScreenEntityQuery"
  
    ScreenParameters:
      type: object
      properties:
        min_score:
          type: number
          format: float
        list_source_categories:
          type: array
          items:
            type: string
        list_sources:
          type: array
          items:
            $ref: '#/components/schemas/ListSource'
        exclude_weak_akas:
          type: boolean
        dob_months_range:
          type: integer
          format: uint32

    NotifierSettings:
      type: object
      properties:
        secret_key:
          type: string
        content_type:
          type: string

    Notifier:
      type: object
      properties:
        url:
          type: string
        name:
          type: string
        slug:
          type: string
        settings:
          $ref: '#/components/schemas/NotifierSettings'

    MonitorScreenEntity:
      type: object
      properties:
        name:
          type: string
        monitor_slug:
          type: string
        id_number:
          type: string
        location:
          type: string
        dob:
          type: string
        provider_id:
          type: string
        reference_id:
          type: string

    MonitorHit:
      type: object
      properties:
        provider_id:
          type: string
        hit:
          $ref: '#/components/schemas/Hit'

    Monitor:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        parameters:
          $ref: '#/components/schemas/ScreenParameters'
        notifier_slug:
          type: string

    Notification:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        hits:
          type: array
          items:
            $ref: '#/components/schemas/MonitorHit'
        notifier_slug:
          type: string
        monitor_slug:
          type: string
        processed_at:
          type: string
          format: date-time

    NotificationReceipt:
      type: object
      properties:
        url:
          type: string
        settings:
          $ref: '#/components/schemas/NotifierSettings'
        response_code:
          type: integer
          format: uint32
        response_body:
          type: string
        created_at:
          type: string
          format: date-time
        notifier_slug:
          type: string
        monitor_slug:
          type: string

    GetMonitorResponse:
      type: object
      properties:
        monitor:
          $ref: '#/components/schemas/Monitor'

    GetMonitorsResponse:
      type: object
      properties:
        monitors:
          type: array
          items:
            $ref: '#/components/schemas/Monitor'

    PostMonitorRequest:
      type: object
      properties:
        monitor:
          $ref: '#/components/schemas/Monitor'

    PostMonitorResponse:
      type: object
      properties:
        slug:
          type: string

    UpdateMonitorRequest:
      type: object
      properties:
        monitor:
          $ref: '#/components/schemas/Monitor'
        update_mask:
          type: object
          # Note: FieldMask is typically represented as an array of strings in OpenAPI
          properties:
            paths:
              type: array
              items:
                type: string
          description: Specifies which fields to update. Each string is a dot-separated path to a field in the request payload.

    UpdateMonitorResponse:
      type: object
      properties:
        monitor:
          $ref: '#/components/schemas/Monitor'

    GetScreenEntityResponse:
      type: object
      properties:
        screen_entity:
          $ref: '#/components/schemas/MonitorScreenEntity'

    UpdateScreenEntityRequest:
      type: object
      properties:
        monitor_slug:
          type: string
        screen_entity:
          $ref: '#/components/schemas/MonitorScreenEntity'
        update_mask:
          type: object
          properties:
            paths:
              type: array
              items:
                type: string

    UpdateScreenEntityResponse:
      type: object
      properties:
        screen_entity:
          $ref: '#/components/schemas/MonitorScreenEntity'

    GetScreenEntitiesResponse:
      type: object
      properties:
        screen_entities:
          type: array
          items:
            $ref: '#/components/schemas/MonitorScreenEntity'

    PostScreenEntitiesRequest:
      type: object
      properties:
        monitor_slug:
          type: string
        screen_entities:
          type: array
          items:
            $ref: '#/components/schemas/MonitorScreenEntity'

    PostScreenEntitiesResponse:
      type: object
      properties:
        monitor_slug:
          type: string
        provider_ids:
          type: array
          items:
            type: string

    UpdateScreenEntitiesRequest:
      type: object
      properties:
        monitor_slug:
          type: string
        screen_entities:
          type: array
          items:
            $ref: '#/components/schemas/MonitorScreenEntity'

    UpdateScreenEntitiesResponse:
      type: object
      properties:
        updated_count:
          type: integer
          format: uint32

    GetMonitorNotificationsResponse:
      type: object
      properties:
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'

    GetMonitorNotifiersResponse:
      type: object
      properties:
        notifiers:
          type: array
          items:
            $ref: '#/components/schemas/Notifier'

    GetNotifiersResponse:
      type: object
      properties:
        notifiers:
          type: array
          items:
            $ref: '#/components/schemas/Notifier'

    PostNotifierRequest:
      type: object
      properties:
        monitor_slug:
          type: string
        notifier:
          $ref: '#/components/schemas/Notifier'

    PostNotifierResponse:
      type: object
      properties:
        slug:
          type: string

    UpdateNotifierRequest:
      type: object
      properties:
        monitor_slug:
          type: string
        notifier:
          $ref: '#/components/schemas/Notifier'
        update_mask:
          type: object
          properties:
            paths:
              type: array
              items:
                type: string

    UpdateNotifierResponse:
      type: object
      properties:
        slug:
          type: string
        notifier:
          $ref: '#/components/schemas/Notifier'

    GetNotificationReceiptsResponse:
      type: object
      properties:
        receipts:
          type: array
          items:
            $ref: '#/components/schemas/NotificationReceipt'

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required: [code, message]

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        This API uses OAuth 2 with the [client credentials](https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/) flow. Once issued, an access token should be reused until it expires. Access token requests are rate limited and too many requests will result in a 429 response. Access tokens expire after 24 hours.

          Production token URL:  https://auth.castellum.ai/oauth/token
          
          Sandbox token URL: https://sandbox-castellum-ai.us.auth0.com/oauth/token
          
          Example token request:
          
          curl --request POST \
          --url 'https://sandbox-castellum-ai.us.auth0.com/oauth/token' \
          --header 'content-type: application/json' \
          --data '{"client_id": "_YOUR_CLIENT_ID_", "client_secret": "_YOUR_CLIENT_SECRET_", "audience": "https://grpc-server.castellum.ai", "grant_type": "client_credentials"}'

  examples:
    ScreenEntityResponse:
      value:
        total_hits: 1
        hits:
          - score: 1
            list_entry:
              type: INDIVIDUAL
              provider_id: 11360
              list_source:
                id: 1
                name: OFAC SDN
                category:
                  id: 1
                  name: Sanctions
                lists:
                  - id: 1
                    name: NPWMD
                last_updated: "2021-04-01"
              citizenships:
                - id: 234
                  iso_3166_1_numeric: 826
                  iso_3166_1_alpha_2: GB
                  official_name: United Kingdom of Great Britain and Northern Ireland
              dobs:
                - start: "1935-09-09"
                  end: "1935-09-09"
              name:
                name: Peter Griffin
                lowQuality: false
                ids:
                  - type: Passport
                    number: B401584
                    issue_date:
                      start: "1989-09-28"
                      end: "1989-09-28"
                    expiration_date:
                      start: "1999-09-28"
                      end: "1999-09-28"
                  - type: Passport
                    number: B109455
                    issue_date:
                      start: "1979-10-03"
                      end: "1979-10-03"
              pobs:
                - address: Oxford, United Kingdom
        query:
          minScore: 0.8
          name: Peter Griffin

    ScreenEntitiesResponse:
      value:
        screen_entities_response:
          - total_hits: 1
            hits:
              - score: 1
                list_entry:
                  type: INDIVIDUAL
                  provider_id: 11360
                  list_source:
                    id: 1
                    name: OFAC SDN
                    category:
                      id: 1
                      name: Sanctions
                    lists:
                      - id: 1
                        name: NPWMD
                    last_updated: "2021-04-01"
                  citizenships:
                    - id: 826
                      iso2: GB
                      name: United Kingdom of Great Britain and Northern Ireland
                  dobs:
                    - start: "1935-09-09"
                      end: "1935-09-09"
                  name:
                    name: Peter Griffin
                    lowQuality: false
                    ids:
                      - type: Passport
                        number: B401584
                        issue_date:
                          start: "1989-09-28"
                          end: "1989-09-28"
                        expiration_date:
                          start: "1999-09-28"
                          end: "1999-09-28"
                      - type: Passport
                        number: B109455
                        issue_date:
                          start: "1979-10-03"
                          end: "1979-10-03"
                  pobs:
                    - address: Oxford, United Kingdom
            query:
              minScore: 0.8
              name: Peter Griffin
          - total_hits: 1
            hits:
              - score: 1
                list_entry:
                  type: INDIVIDUAL
                  providerId: CNMFA8
                  watchlists:
                    - China MFA
                  programs:
                    - China MFA Sanctions
                  citizenships:
                    - id: 840
                      name: United States of America
                      iso2: US
                  dobs:
                    - start: "1970-12-22"
                      end: "1970-12-22"
                  name:
                    name: Ted Cruz
                    lowQuality: false
                  catchAll:
                    Legal Basis:
                      - In response to the US wrong moves, the Chinese government has decided to impose
                        corresponding sanctions on the US Congressional-Executive Commission on China,
                        US Ambassador-at-Large for International Religious Freedom Sam Brownback,
                        US Senators Marco Rubio and Ted Cruz and Representative Chris Smith, effective
                        today. It must be stressed that Xinjiang affairs are purely China's internal
                        affairs.
                    Listing Date:
                      - 13 July 2020
                    Source:
                      - https://www.fmprc.gov.cn/mfa_eng/xwfw_665399/s2510_665401/t1797455.shtml
                    Title:
                      - Senator
            query:
              minScore: 0.8
              name: Ted Cruz
              list_ids: [12]

servers:
  - url: https://api.castellum.ai
    description: Production API URL.
  - url: https://api.sandbox.castellum.ai
    description: Sandbox API URL.
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/castellum.ai/Search/1.0.0